#!/usr/bin/make -f

HOST_LIST ?= amd64 i386


THIS_PKG         := $(shell dpkg-parsechangelog| sed -n 's/-*//; s/^Source: \(.*\)/\1/p')
THIS_PKG_VER     := $(shell dpkg-parsechangelog| sed -n 's/^Version: \(.*\)/\1/p')
THIS_PKG_MAINT   := $(shell dpkg-parsechangelog| sed -n 's/^Maintainer: \(.*\)/\1/p')

DEB_HOST_ARCH    := $(shell dpkg-architecture -qDEB_HOST_ARCH)
stamp            := stamp/


VER_BINUTILS     := $(shell dpkg-parsechangelog -l/usr/src/binutils/debian/changelog | egrep '^Version:' | cut -f 2 -d ' '|cut -f 1 -d '-'|cut -d '.' -f1-3)
PKG_VER_BINUTILS := $(shell dpkg-parsechangelog -l/usr/src/binutils/debian/changelog | egrep '^Version:' | cut -f 2 -d ' '|cut -f 1 -d '-')
DEB_VER_BINUTILS := $(shell dpkg-parsechangelog -l/usr/src/binutils/debian/changelog | egrep '^Version:' | cut -f 2 -d ' ')

BINUTILS_DIR  := /usr/src/binutils



info:
	@echo "Binutils version:     ${VER_BINUTILS}	${DEB_VER_BINUTILS}	${PKG_VER_BINUTILS}"
	@echo
	@echo "Target architecture:  ${DEB_TARGET_ARCH}"
	@echo "Host architecture:    ${DEB_HOST_ARCH}"

init: $(stamp)init

$(stamp)init:
	@echo START $@
	mkdir debian/tmp -p
	tar -x -f  ${BINUTILS_DIR}/binutils-${VER_BINUTILS}.tar.xz
	set -e; \
	cd binutils-${PKG_VER_BINUTILS} ;\
	cp -a ${BINUTILS_DIR}/debian/ . ;\
	if [ -n "$$(grep -v '^\#' ${CURDIR}/debian/patches/binutils/series)" ]; then \
	  QUILT_PATCHES=${CURDIR}/debian/patches/binutils quilt push -a; \
	fi; \

	touch $@

$(stamp)build: $(stamp)init
	@echo START $@
	set -e; \
	cd binutils-${PKG_VER_BINUTILS}; \
	TARGET=${DEB_TARGET_ARCH} dpkg-buildpackage -T control-stamp; \
	WITH_SYSROOT=/ TARGET=${DEB_TARGET_ARCH} dpkg-buildpackage -B -uc -us; \
	cd ..; \
	touch $@


clean:
	rm -rf repackfiles tmp
	rm -rf binutils-*
	rm -rf debian/tmp debian/files
	find debian -name '*~' -print0 | xargs -0 -r rm -f
	rm -f *.deb *.changes
	rm -rf $(stamp)
	mkdir $(stamp)


#
# Repack resulting packages to make changes:
# - Set Source and Version to this package
define repack_deb
	echo "repacking $$deb ..."; \
	rm -rf tmp/*; \
	dpkg-deb -x $$deb tmp; \
	dpkg-deb -e $$deb tmp/DEBIAN; \
	pkgname=`echo $$deb | cut -d'_' -f1`; \
        sed -i -e's/^Source:.*/Source: ${THIS_PKG} (${THIS_PKG_VER})/' tmp/DEBIAN/control; \
        sed -i -e's/^Maintainer:.*/Maintainer: ${THIS_PKG_MAINT}\nXB-Original-Source-&/' tmp/DEBIAN/control; \
	sed -i -e'3 a\
	Built-Using: binutils (=${DEB_VER_BINUTILS})' tmp/DEBIAN/control; \
	if [ -e debian/overrides/$$pkgname ]; then \
	  mkdir -p tmp/usr/share/lintian/overrides; \
	  cp debian/overrides/$$pkgname tmp/usr/share/lintian/overrides/; \
	fi; \
	(cd tmp && md5sum `find usr -type f` >>DEBIAN/md5sums);\
	dpkg-deb -b tmp/ ../$$deb; \
	echo "        done";
endef

repack-debs:
	@echo START $@
	install -d repackfiles; \
	for deb in $(wildcard *.deb); \
	do \
	  $(call repack_deb, $${deb}) \
	done; \

build-arch: build
build-indep:
build: $(stamp)build
	rm -f *.changes

binary: binary-arch binary-indep
binary-arch:  build-arch mangle-debian-files
binary-indep:


$(stamp)debian-files:
	@echo START $@
	rm -f debian/files
	touch $@

mangle-debian-files: $(stamp)debian-files repack-debs
	@echo START $@
	@for deb in $(wildcard *.deb); \
	do \
		echo -n "`basename $$deb` " >>debian/files; \
		dpkg-deb -I $$deb | grep Section  | cut -d ' ' -f 3 | tr "\n" ' ' >>debian/files; \
		dpkg-deb -I $$deb | grep Priority | cut -d ' ' -f 3 | tr -d "\n" >>debian/files; \
		echo "" >>debian/files; \
	done


# Generate the control file from head plus stanza for each binary
# Don't build binaries when HOST=TARGET

control:
	(cat debian/control.head.in; echo) > debian/control;
	DEB_TARGET_GNU_TYPE=`dpkg-architecture -a$${DEB_TARGET_ARCH} -qDEB_HOST_GNU_TYPE -f 2>/dev/null`; \
	ARCH_LIST_FOR_BINARY=`echo ${HOST_LIST} | sed "s/ *$${DEB_TARGET_ARCH} *//"`; \
	sed -e "s/DEB_TARGET_ARCH/$${DEB_TARGET_ARCH}/g" debian/control.binary.in | \
	sed -e "s/ARCH_LIST_FOR_BINARY/$${ARCH_LIST_FOR_BINARY}/g" | \
	sed -e "s/DEB_TARGET_GNU_TYPE/$${DEB_TARGET_GNU_TYPE}/g" >> debian/control; \
